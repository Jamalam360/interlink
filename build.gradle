plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

archivesBaseName = "${project.modName}-${project.minecraftVersion}"

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    withSourcesJar()
}

loom {
    accessWidenerPath = file("src/main/resources/modfestutilities.accesswidener")
}

repositories {
    maven {
        name = "dv8tion"
        url = "https://m2.dv8tion.net/releases/"
        content { includeGroup "net.dv8tion" }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings "net.fabricmc:yarn:${project.yarnVersion}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabricLoaderVersion}"

    modImplementation(fabricApi.module("fabric-api-base", project.fabricApiVersion))
    modImplementation(fabricApi.module("fabric-command-api-v1", project.fabricApiVersion))
    modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabricApiVersion))

    // https://github.com/DV8FromTheWorld/JDA
    include implementation("net.dv8tion:JDA:4.3.0_296") {
        exclude module: 'opus-java'
    }
    // Include JDA's dependencies in the jar
    include("net.sf.trove4j:trove4j:3.0.3")
    include("org.apache.commons:commons-collections4:4.1")
    include("com.fasterxml.jackson.core:jackson-databind:2.10.1")
    include("com.fasterxml.jackson.core:jackson-annotations:2.10.1")
    include("com.fasterxml.jackson.core:jackson-core:2.10.1")
    include("com.squareup.okhttp3:okhttp:3.13.0")
    include("com.squareup.okio:okio:2.6.0")
    include("com.neovisionaries:nv-websocket-client:2.14")
    modLocalRuntime("net.fabricmc:fabric-language-kotlin:1.6.2+kotlin.1.5.20") { // includes kotlin for squareup libs
        exclude module: "fabric-loader"
    }
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
    	expand "version": project.version
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
